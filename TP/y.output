   0  $accept : file $end

   1  $$1 :

   2  file : PROGRAM decls START $$1 main END
   3       | MODULE decls END

   4  decls :
   5        | gdecls

   6  gdecls : gdecls ';' decl
   7         | decl

   8  decl : qualif const vardecl

   9  $$2 :

  10  $$3 :

  11  decl : FUNCTION qualif ftype ID $$2 fvars $$3 eqbody

  12  $$4 :

  13  decl : FUNCTION qualif ftype ID $$4 eqbody
  14       | error

  15  fvar : NUMBER ID
  16       | STRING ID
  17       | ARRAY ID vdim

  18  fvars : fvar
  19        | fvars ';' fvar

  20  vardecl : NUMBER ID eqint
  21          | STRING ID eqstr
  22          | ARRAY ID vdim eqvec

  23  vdim : '[' INT ']'
  24       |

  25  qualif : PUBLIC
  26         | FORWARD
  27         |

  28  const : CONST
  29        |

  30  type : NUMBER
  31       | STRING
  32       | ARRAY

  33  ftype : type
  34        | VOID

  35  eqint :
  36        | EQ INT
  37        | EQ '-' INT

  38  eqstr :
  39        | EQ chars

  40  chars : char
  41        | chars char

  42  char : INT
  43       | CHAR
  44       | STR

  45  eqvec :
  46        | EQ ints

  47  ints : INT
  48       | '-' INT
  49       | ints ',' INT
  50       | ints ',' '-' INT

  51  eqbody : DONE
  52         | DO body

  53  main : fvars ';' instrs
  54       | instrs

  55  body : fvars ';' instrs ret
  56       | instrs ret

  57  ret : RETURN
  58      | RETURN expr
  59      |

  60  loop : ret
  61       | REPEAT
  62       | STOP

  63  block : instrs loop

  64  instrs :
  65         | instrs instr
  66         | instrs lbl

  67  lbl : ID ':'

  68  instr : IF expr THEN block elifs else FI

  69  $$5 :

  70  instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE
  71        | expr '!'
  72        | expr ';'
  73        | lval '#' expr ';'
  74        | GOTO ID

  75  elifs :
  76        | elifs ELIF expr THEN block

  77  else :
  78       | ELSE block

  79  lval : ID
  80       | ID '[' expr ']'

  81  expr : chars
  82       | lval
  83       | '?'
  84       | '&' lval
  85       | '(' expr ')'
  86       | expr '+' expr
  87       | expr '-' expr
  88       | expr '*' expr
  89       | expr '/' expr
  90       | expr '%' expr
  91       | expr '^' expr
  92       | expr '=' expr
  93       | expr NE expr
  94       | expr GE expr
  95       | expr LE expr
  96       | expr '<' expr
  97       | expr '>' expr
  98       | expr '&' expr
  99       | expr '|' expr
 100       | expr TPAND expr
 101       | '~' expr
 102       | '-' expr
 103       | lval EQ expr
 104       | ID '(' exprs ')'

 105  exprs : expr
 106        | exprs ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3


state 1
	file : PROGRAM . decls START $$1 main END  (2)
	decls : .  (4)
	qualif : .  (27)

	error  shift 4
	PUBLIC  shift 5
	FORWARD  shift 6
	FUNCTION  shift 7
	STRING  reduce 27
	NUMBER  reduce 27
	ARRAY  reduce 27
	CONST  reduce 27
	START  reduce 4

	decls  goto 8
	gdecls  goto 9
	decl  goto 10
	qualif  goto 11


state 2
	file : MODULE . decls END  (3)
	decls : .  (4)
	qualif : .  (27)

	error  shift 4
	PUBLIC  shift 5
	FORWARD  shift 6
	FUNCTION  shift 7
	END  reduce 4
	STRING  reduce 27
	NUMBER  reduce 27
	ARRAY  reduce 27
	CONST  reduce 27

	decls  goto 12
	gdecls  goto 9
	decl  goto 10
	qualif  goto 11


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	decl : error .  (14)

	.  reduce 14


state 5
	qualif : PUBLIC .  (25)

	.  reduce 25


state 6
	qualif : FORWARD .  (26)

	.  reduce 26


state 7
	decl : FUNCTION . qualif ftype ID $$2 fvars $$3 eqbody  (11)
	decl : FUNCTION . qualif ftype ID $$4 eqbody  (13)
	qualif : .  (27)

	PUBLIC  shift 5
	FORWARD  shift 6
	STRING  reduce 27
	NUMBER  reduce 27
	ARRAY  reduce 27
	VOID  reduce 27

	qualif  goto 13


state 8
	file : PROGRAM decls . START $$1 main END  (2)

	START  shift 14
	.  error


state 9
	decls : gdecls .  (5)
	gdecls : gdecls . ';' decl  (6)

	';'  shift 15
	END  reduce 5
	START  reduce 5


state 10
	gdecls : decl .  (7)

	.  reduce 7


state 11
	decl : qualif . const vardecl  (8)
	const : .  (29)

	CONST  shift 16
	STRING  reduce 29
	NUMBER  reduce 29
	ARRAY  reduce 29

	const  goto 17


state 12
	file : MODULE decls . END  (3)

	END  shift 18
	.  error


state 13
	decl : FUNCTION qualif . ftype ID $$2 fvars $$3 eqbody  (11)
	decl : FUNCTION qualif . ftype ID $$4 eqbody  (13)

	STRING  shift 19
	NUMBER  shift 20
	ARRAY  shift 21
	VOID  shift 22
	.  error

	type  goto 23
	ftype  goto 24


state 14
	file : PROGRAM decls START . $$1 main END  (2)
	$$1 : .  (1)

	.  reduce 1

	$$1  goto 25


state 15
	gdecls : gdecls ';' . decl  (6)
	qualif : .  (27)

	error  shift 4
	PUBLIC  shift 5
	FORWARD  shift 6
	FUNCTION  shift 7
	STRING  reduce 27
	NUMBER  reduce 27
	ARRAY  reduce 27
	CONST  reduce 27

	decl  goto 26
	qualif  goto 11


state 16
	const : CONST .  (28)

	.  reduce 28


state 17
	decl : qualif const . vardecl  (8)

	STRING  shift 27
	NUMBER  shift 28
	ARRAY  shift 29
	.  error

	vardecl  goto 30


state 18
	file : MODULE decls END .  (3)

	.  reduce 3


state 19
	type : STRING .  (31)

	.  reduce 31


state 20
	type : NUMBER .  (30)

	.  reduce 30


state 21
	type : ARRAY .  (32)

	.  reduce 32


state 22
	ftype : VOID .  (34)

	.  reduce 34


state 23
	ftype : type .  (33)

	.  reduce 33


state 24
	decl : FUNCTION qualif ftype . ID $$2 fvars $$3 eqbody  (11)
	decl : FUNCTION qualif ftype . ID $$4 eqbody  (13)

	ID  shift 31
	.  error


state 25
	file : PROGRAM decls START $$1 . main END  (2)
	instrs : .  (64)

	STRING  shift 32
	NUMBER  shift 33
	ARRAY  shift 34
	INT  reduce 64
	CHAR  reduce 64
	ID  reduce 64
	STR  reduce 64
	END  reduce 64
	IF  reduce 64
	FOR  reduce 64
	GOTO  reduce 64
	'&'  reduce 64
	'~'  reduce 64
	'-'  reduce 64
	'?'  reduce 64
	'('  reduce 64

	fvar  goto 35
	fvars  goto 36
	instrs  goto 37
	main  goto 38


state 26
	gdecls : gdecls ';' decl .  (6)

	.  reduce 6


state 27
	vardecl : STRING . ID eqstr  (21)

	ID  shift 39
	.  error


state 28
	vardecl : NUMBER . ID eqint  (20)

	ID  shift 40
	.  error


state 29
	vardecl : ARRAY . ID vdim eqvec  (22)

	ID  shift 41
	.  error


state 30
	decl : qualif const vardecl .  (8)

	.  reduce 8


state 31
	decl : FUNCTION qualif ftype ID . $$2 fvars $$3 eqbody  (11)
	decl : FUNCTION qualif ftype ID . $$4 eqbody  (13)
	$$2 : .  (9)
	$$4 : .  (12)

	STRING  reduce 9
	NUMBER  reduce 9
	ARRAY  reduce 9
	DO  reduce 12
	DONE  reduce 12

	$$2  goto 42
	$$4  goto 43


state 32
	fvar : STRING . ID  (16)

	ID  shift 44
	.  error


state 33
	fvar : NUMBER . ID  (15)

	ID  shift 45
	.  error


state 34
	fvar : ARRAY . ID vdim  (17)

	ID  shift 46
	.  error


state 35
	fvars : fvar .  (18)

	.  reduce 18


state 36
	fvars : fvars . ';' fvar  (19)
	main : fvars . ';' instrs  (53)

	';'  shift 47
	.  error


state 37
	main : instrs .  (54)
	instrs : instrs . instr  (65)
	instrs : instrs . lbl  (66)

	INT  shift 48
	CHAR  shift 49
	ID  shift 50
	STR  shift 51
	IF  shift 52
	FOR  shift 53
	GOTO  shift 54
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	END  reduce 54

	lval  goto 60
	chars  goto 61
	char  goto 62
	instr  goto 63
	expr  goto 64
	lbl  goto 65


state 38
	file : PROGRAM decls START $$1 main . END  (2)

	END  shift 66
	.  error


state 39
	vardecl : STRING ID . eqstr  (21)
	eqstr : .  (38)

	EQ  shift 67
	END  reduce 38
	START  reduce 38
	';'  reduce 38

	eqstr  goto 68


state 40
	vardecl : NUMBER ID . eqint  (20)
	eqint : .  (35)

	EQ  shift 69
	END  reduce 35
	START  reduce 35
	';'  reduce 35

	eqint  goto 70


state 41
	vardecl : ARRAY ID . vdim eqvec  (22)
	vdim : .  (24)

	'['  shift 71
	END  reduce 24
	START  reduce 24
	EQ  reduce 24
	';'  reduce 24

	vdim  goto 72


state 42
	decl : FUNCTION qualif ftype ID $$2 . fvars $$3 eqbody  (11)

	STRING  shift 32
	NUMBER  shift 33
	ARRAY  shift 34
	.  error

	fvar  goto 35
	fvars  goto 73


state 43
	decl : FUNCTION qualif ftype ID $$4 . eqbody  (13)

	DO  shift 74
	DONE  shift 75
	.  error

	eqbody  goto 76


state 44
	fvar : STRING ID .  (16)

	.  reduce 16


state 45
	fvar : NUMBER ID .  (15)

	.  reduce 15


state 46
	fvar : ARRAY ID . vdim  (17)
	vdim : .  (24)

	'['  shift 71
	DO  reduce 24
	DONE  reduce 24
	';'  reduce 24

	vdim  goto 77


state 47
	fvars : fvars ';' . fvar  (19)
	main : fvars ';' . instrs  (53)
	instrs : .  (64)

	STRING  shift 32
	NUMBER  shift 33
	ARRAY  shift 34
	INT  reduce 64
	CHAR  reduce 64
	ID  reduce 64
	STR  reduce 64
	END  reduce 64
	IF  reduce 64
	FOR  reduce 64
	GOTO  reduce 64
	'&'  reduce 64
	'~'  reduce 64
	'-'  reduce 64
	'?'  reduce 64
	'('  reduce 64

	fvar  goto 78
	instrs  goto 79


state 48
	char : INT .  (42)

	.  reduce 42


state 49
	char : CHAR .  (43)

	.  reduce 43


state 50
	lbl : ID . ':'  (67)
	lval : ID .  (79)
	lval : ID . '[' expr ']'  (80)
	expr : ID . '(' exprs ')'  (104)

	'['  shift 80
	':'  shift 81
	'('  shift 82
	TPAND  reduce 79
	EQ  reduce 79
	'|'  reduce 79
	'&'  reduce 79
	'='  reduce 79
	NE  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	GE  reduce 79
	LE  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	'^'  reduce 79
	';'  reduce 79
	'!'  reduce 79
	'#'  reduce 79


state 51
	char : STR .  (44)

	.  reduce 44


state 52
	instr : IF . expr THEN block elifs else FI  (68)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 85


state 53
	instr : FOR . expr UNTIL expr STEP expr DO $$5 block DONE  (70)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 86


state 54
	instr : GOTO . ID  (74)

	ID  shift 87
	.  error


state 55
	expr : '&' . lval  (84)

	ID  shift 88
	.  error

	lval  goto 89


state 56
	expr : '~' . expr  (101)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 90


state 57
	expr : '-' . expr  (102)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 91


state 58
	expr : '?' .  (83)

	.  reduce 83


state 59
	expr : '(' . expr ')'  (85)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 92


state 60
	instr : lval . '#' expr ';'  (73)
	expr : lval .  (82)
	expr : lval . EQ expr  (103)

	EQ  shift 93
	'#'  shift 94
	TPAND  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	'='  reduce 82
	NE  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	GE  reduce 82
	LE  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82
	'^'  reduce 82
	';'  reduce 82
	'!'  reduce 82


state 61
	chars : chars . char  (41)
	expr : chars .  (81)

	INT  shift 48
	CHAR  shift 49
	STR  shift 51
	END  reduce 81
	THEN  reduce 81
	FI  reduce 81
	ELIF  reduce 81
	ELSE  reduce 81
	START  reduce 81
	UNTIL  reduce 81
	STEP  reduce 81
	DO  reduce 81
	DONE  reduce 81
	TPAND  reduce 81
	'|'  reduce 81
	'&'  reduce 81
	'='  reduce 81
	NE  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	GE  reduce 81
	LE  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	'^'  reduce 81
	';'  reduce 81
	']'  reduce 81
	','  reduce 81
	'!'  reduce 81
	')'  reduce 81

	char  goto 95


state 62
	chars : char .  (40)

	.  reduce 40


state 63
	instrs : instrs instr .  (65)

	.  reduce 65


state 64
	instr : expr . '!'  (71)
	instr : expr . ';'  (72)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	';'  shift 111
	'!'  shift 112
	.  error


state 65
	instrs : instrs lbl .  (66)

	.  reduce 66


state 66
	file : PROGRAM decls START $$1 main END .  (2)

	.  reduce 2


state 67
	eqstr : EQ . chars  (39)

	INT  shift 48
	CHAR  shift 49
	STR  shift 51
	.  error

	chars  goto 113
	char  goto 62


state 68
	vardecl : STRING ID eqstr .  (21)

	.  reduce 21


state 69
	eqint : EQ . INT  (36)
	eqint : EQ . '-' INT  (37)

	INT  shift 114
	'-'  shift 115
	.  error


state 70
	vardecl : NUMBER ID eqint .  (20)

	.  reduce 20


state 71
	vdim : '[' . INT ']'  (23)

	INT  shift 116
	.  error


state 72
	vardecl : ARRAY ID vdim . eqvec  (22)
	eqvec : .  (45)

	EQ  shift 117
	END  reduce 45
	START  reduce 45
	';'  reduce 45

	eqvec  goto 118


state 73
	decl : FUNCTION qualif ftype ID $$2 fvars . $$3 eqbody  (11)
	fvars : fvars . ';' fvar  (19)
	$$3 : .  (10)

	';'  shift 119
	DO  reduce 10
	DONE  reduce 10

	$$3  goto 120


state 74
	eqbody : DO . body  (52)
	instrs : .  (64)

	STRING  shift 32
	NUMBER  shift 33
	ARRAY  shift 34
	INT  reduce 64
	CHAR  reduce 64
	ID  reduce 64
	STR  reduce 64
	END  reduce 64
	IF  reduce 64
	RETURN  reduce 64
	START  reduce 64
	FOR  reduce 64
	GOTO  reduce 64
	'&'  reduce 64
	'~'  reduce 64
	'-'  reduce 64
	';'  reduce 64
	'?'  reduce 64
	'('  reduce 64

	fvar  goto 35
	fvars  goto 121
	body  goto 122
	instrs  goto 123


state 75
	eqbody : DONE .  (51)

	.  reduce 51


state 76
	decl : FUNCTION qualif ftype ID $$4 eqbody .  (13)

	.  reduce 13


state 77
	fvar : ARRAY ID vdim .  (17)

	.  reduce 17


state 78
	fvars : fvars ';' fvar .  (19)

	.  reduce 19


state 79
	main : fvars ';' instrs .  (53)
	instrs : instrs . instr  (65)
	instrs : instrs . lbl  (66)

	INT  shift 48
	CHAR  shift 49
	ID  shift 50
	STR  shift 51
	IF  shift 52
	FOR  shift 53
	GOTO  shift 54
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	END  reduce 53

	lval  goto 60
	chars  goto 61
	char  goto 62
	instr  goto 63
	expr  goto 64
	lbl  goto 65


state 80
	lval : ID '[' . expr ']'  (80)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 124


state 81
	lbl : ID ':' .  (67)

	.  reduce 67


state 82
	expr : ID '(' . exprs ')'  (104)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 125
	exprs  goto 126


state 83
	lval : ID .  (79)
	lval : ID . '[' expr ']'  (80)
	expr : ID . '(' exprs ')'  (104)

	'['  shift 80
	'('  shift 82
	END  reduce 79
	THEN  reduce 79
	FI  reduce 79
	ELIF  reduce 79
	ELSE  reduce 79
	START  reduce 79
	UNTIL  reduce 79
	STEP  reduce 79
	DO  reduce 79
	DONE  reduce 79
	TPAND  reduce 79
	EQ  reduce 79
	'|'  reduce 79
	'&'  reduce 79
	'='  reduce 79
	NE  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	GE  reduce 79
	LE  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	'^'  reduce 79
	';'  reduce 79
	']'  reduce 79
	','  reduce 79
	'!'  reduce 79
	')'  reduce 79


state 84
	expr : lval .  (82)
	expr : lval . EQ expr  (103)

	EQ  shift 93
	END  reduce 82
	THEN  reduce 82
	FI  reduce 82
	ELIF  reduce 82
	ELSE  reduce 82
	START  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	DO  reduce 82
	DONE  reduce 82
	TPAND  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	'='  reduce 82
	NE  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	GE  reduce 82
	LE  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82
	'^'  reduce 82
	';'  reduce 82
	']'  reduce 82
	','  reduce 82
	'!'  reduce 82
	')'  reduce 82


state 85
	instr : IF expr . THEN block elifs else FI  (68)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	THEN  shift 127
	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	.  error


state 86
	instr : FOR expr . UNTIL expr STEP expr DO $$5 block DONE  (70)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	UNTIL  shift 128
	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	.  error


state 87
	instr : GOTO ID .  (74)

	.  reduce 74


state 88
	lval : ID .  (79)
	lval : ID . '[' expr ']'  (80)

	'['  shift 80
	END  reduce 79
	THEN  reduce 79
	FI  reduce 79
	ELIF  reduce 79
	ELSE  reduce 79
	START  reduce 79
	UNTIL  reduce 79
	STEP  reduce 79
	DO  reduce 79
	DONE  reduce 79
	TPAND  reduce 79
	'|'  reduce 79
	'&'  reduce 79
	'='  reduce 79
	NE  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	GE  reduce 79
	LE  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	'^'  reduce 79
	';'  reduce 79
	']'  reduce 79
	','  reduce 79
	'!'  reduce 79
	')'  reduce 79


state 89
	expr : '&' lval .  (84)

	.  reduce 84


state 90
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)
	expr : '~' expr .  (101)

	TPAND  shift 96
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 101
	THEN  reduce 101
	FI  reduce 101
	ELIF  reduce 101
	ELSE  reduce 101
	START  reduce 101
	UNTIL  reduce 101
	STEP  reduce 101
	DO  reduce 101
	DONE  reduce 101
	'|'  reduce 101
	'&'  reduce 101
	';'  reduce 101
	']'  reduce 101
	','  reduce 101
	'!'  reduce 101
	')'  reduce 101


state 91
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)
	expr : '-' expr .  (102)

	.  reduce 102


state 92
	expr : '(' expr . ')'  (85)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	')'  shift 129
	.  error


state 93
	expr : lval EQ . expr  (103)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 130


state 94
	instr : lval '#' . expr ';'  (73)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 131


state 95
	chars : chars char .  (41)

	.  reduce 41


state 96
	expr : expr TPAND . expr  (100)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 132


state 97
	expr : expr '|' . expr  (99)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 133


state 98
	expr : expr '&' . expr  (98)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 134


state 99
	expr : expr '=' . expr  (92)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 135


state 100
	expr : expr NE . expr  (93)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 136


state 101
	expr : expr '<' . expr  (96)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 137


state 102
	expr : expr '>' . expr  (97)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 138


state 103
	expr : expr GE . expr  (94)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 139


state 104
	expr : expr LE . expr  (95)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 140


state 105
	expr : expr '+' . expr  (86)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 141


state 106
	expr : expr '-' . expr  (87)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 142


state 107
	expr : expr '*' . expr  (88)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 143


state 108
	expr : expr '/' . expr  (89)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 144


state 109
	expr : expr '%' . expr  (90)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 145


state 110
	expr : expr '^' . expr  (91)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 146


state 111
	instr : expr ';' .  (72)

	.  reduce 72


state 112
	instr : expr '!' .  (71)

	.  reduce 71


state 113
	eqstr : EQ chars .  (39)
	chars : chars . char  (41)

	INT  shift 48
	CHAR  shift 49
	STR  shift 51
	END  reduce 39
	START  reduce 39
	';'  reduce 39

	char  goto 95


state 114
	eqint : EQ INT .  (36)

	.  reduce 36


state 115
	eqint : EQ '-' . INT  (37)

	INT  shift 147
	.  error


state 116
	vdim : '[' INT . ']'  (23)

	']'  shift 148
	.  error


state 117
	eqvec : EQ . ints  (46)

	INT  shift 149
	'-'  shift 150
	.  error

	ints  goto 151


state 118
	vardecl : ARRAY ID vdim eqvec .  (22)

	.  reduce 22


state 119
	fvars : fvars ';' . fvar  (19)

	STRING  shift 32
	NUMBER  shift 33
	ARRAY  shift 34
	.  error

	fvar  goto 78


state 120
	decl : FUNCTION qualif ftype ID $$2 fvars $$3 . eqbody  (11)

	DO  shift 74
	DONE  shift 75
	.  error

	eqbody  goto 152


state 121
	fvars : fvars . ';' fvar  (19)
	body : fvars . ';' instrs ret  (55)

	';'  shift 153
	.  error


state 122
	eqbody : DO body .  (52)

	.  reduce 52


state 123
	body : instrs . ret  (56)
	instrs : instrs . instr  (65)
	instrs : instrs . lbl  (66)
	ret : .  (59)

	INT  shift 48
	CHAR  shift 49
	ID  shift 50
	STR  shift 51
	IF  shift 52
	RETURN  shift 154
	FOR  shift 53
	GOTO  shift 54
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	END  reduce 59
	START  reduce 59
	';'  reduce 59

	lval  goto 60
	chars  goto 61
	char  goto 62
	ret  goto 155
	instr  goto 63
	expr  goto 64
	lbl  goto 65


state 124
	lval : ID '[' expr . ']'  (80)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	']'  shift 156
	.  error


state 125
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)
	exprs : expr .  (105)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	','  reduce 105
	')'  reduce 105


state 126
	expr : ID '(' exprs . ')'  (104)
	exprs : exprs . ',' expr  (106)

	','  shift 157
	')'  shift 158
	.  error


state 127
	instr : IF expr THEN . block elifs else FI  (68)
	instrs : .  (64)

	.  reduce 64

	instrs  goto 159
	block  goto 160


state 128
	instr : FOR expr UNTIL . expr STEP expr DO $$5 block DONE  (70)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 161


state 129
	expr : '(' expr ')' .  (85)

	.  reduce 85


state 130
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)
	expr : lval EQ expr .  (103)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 103
	THEN  reduce 103
	FI  reduce 103
	ELIF  reduce 103
	ELSE  reduce 103
	START  reduce 103
	UNTIL  reduce 103
	STEP  reduce 103
	DO  reduce 103
	DONE  reduce 103
	';'  reduce 103
	']'  reduce 103
	','  reduce 103
	'!'  reduce 103
	')'  reduce 103


state 131
	instr : lval '#' expr . ';'  (73)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	';'  shift 162
	.  error


state 132
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)
	expr : expr TPAND expr .  (100)

	TPAND  shift 96
	'^'  shift 110
	END  reduce 100
	THEN  reduce 100
	FI  reduce 100
	ELIF  reduce 100
	ELSE  reduce 100
	START  reduce 100
	UNTIL  reduce 100
	STEP  reduce 100
	DO  reduce 100
	DONE  reduce 100
	'|'  reduce 100
	'&'  reduce 100
	'='  reduce 100
	NE  reduce 100
	'<'  reduce 100
	'>'  reduce 100
	GE  reduce 100
	LE  reduce 100
	'+'  reduce 100
	'-'  reduce 100
	'*'  reduce 100
	'/'  reduce 100
	'%'  reduce 100
	';'  reduce 100
	']'  reduce 100
	','  reduce 100
	'!'  reduce 100
	')'  reduce 100


state 133
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr '|' expr .  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 99
	THEN  reduce 99
	FI  reduce 99
	ELIF  reduce 99
	ELSE  reduce 99
	START  reduce 99
	UNTIL  reduce 99
	STEP  reduce 99
	DO  reduce 99
	DONE  reduce 99
	'|'  reduce 99
	';'  reduce 99
	']'  reduce 99
	','  reduce 99
	'!'  reduce 99
	')'  reduce 99


state 134
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr '&' expr .  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 98
	THEN  reduce 98
	FI  reduce 98
	ELIF  reduce 98
	ELSE  reduce 98
	START  reduce 98
	UNTIL  reduce 98
	STEP  reduce 98
	DO  reduce 98
	DONE  reduce 98
	'|'  reduce 98
	'&'  reduce 98
	';'  reduce 98
	']'  reduce 98
	','  reduce 98
	'!'  reduce 98
	')'  reduce 98


state 135
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr '=' expr .  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 92
	THEN  reduce 92
	FI  reduce 92
	ELIF  reduce 92
	ELSE  reduce 92
	START  reduce 92
	UNTIL  reduce 92
	STEP  reduce 92
	DO  reduce 92
	DONE  reduce 92
	'|'  reduce 92
	'&'  reduce 92
	'='  reduce 92
	NE  reduce 92
	';'  reduce 92
	']'  reduce 92
	','  reduce 92
	'!'  reduce 92
	')'  reduce 92


state 136
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr NE expr .  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 93
	THEN  reduce 93
	FI  reduce 93
	ELIF  reduce 93
	ELSE  reduce 93
	START  reduce 93
	UNTIL  reduce 93
	STEP  reduce 93
	DO  reduce 93
	DONE  reduce 93
	'|'  reduce 93
	'&'  reduce 93
	'='  reduce 93
	NE  reduce 93
	';'  reduce 93
	']'  reduce 93
	','  reduce 93
	'!'  reduce 93
	')'  reduce 93


state 137
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr '<' expr .  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 96
	THEN  reduce 96
	FI  reduce 96
	ELIF  reduce 96
	ELSE  reduce 96
	START  reduce 96
	UNTIL  reduce 96
	STEP  reduce 96
	DO  reduce 96
	DONE  reduce 96
	'|'  reduce 96
	'&'  reduce 96
	'='  reduce 96
	NE  reduce 96
	'<'  reduce 96
	'>'  reduce 96
	GE  reduce 96
	LE  reduce 96
	';'  reduce 96
	']'  reduce 96
	','  reduce 96
	'!'  reduce 96
	')'  reduce 96


state 138
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr '>' expr .  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 97
	THEN  reduce 97
	FI  reduce 97
	ELIF  reduce 97
	ELSE  reduce 97
	START  reduce 97
	UNTIL  reduce 97
	STEP  reduce 97
	DO  reduce 97
	DONE  reduce 97
	'|'  reduce 97
	'&'  reduce 97
	'='  reduce 97
	NE  reduce 97
	'<'  reduce 97
	'>'  reduce 97
	GE  reduce 97
	LE  reduce 97
	';'  reduce 97
	']'  reduce 97
	','  reduce 97
	'!'  reduce 97
	')'  reduce 97


state 139
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr GE expr .  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 94
	THEN  reduce 94
	FI  reduce 94
	ELIF  reduce 94
	ELSE  reduce 94
	START  reduce 94
	UNTIL  reduce 94
	STEP  reduce 94
	DO  reduce 94
	DONE  reduce 94
	'|'  reduce 94
	'&'  reduce 94
	'='  reduce 94
	NE  reduce 94
	'<'  reduce 94
	'>'  reduce 94
	GE  reduce 94
	LE  reduce 94
	';'  reduce 94
	']'  reduce 94
	','  reduce 94
	'!'  reduce 94
	')'  reduce 94


state 140
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr LE expr .  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 95
	THEN  reduce 95
	FI  reduce 95
	ELIF  reduce 95
	ELSE  reduce 95
	START  reduce 95
	UNTIL  reduce 95
	STEP  reduce 95
	DO  reduce 95
	DONE  reduce 95
	'|'  reduce 95
	'&'  reduce 95
	'='  reduce 95
	NE  reduce 95
	'<'  reduce 95
	'>'  reduce 95
	GE  reduce 95
	LE  reduce 95
	';'  reduce 95
	']'  reduce 95
	','  reduce 95
	'!'  reduce 95
	')'  reduce 95


state 141
	expr : expr . '+' expr  (86)
	expr : expr '+' expr .  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 86
	THEN  reduce 86
	FI  reduce 86
	ELIF  reduce 86
	ELSE  reduce 86
	START  reduce 86
	UNTIL  reduce 86
	STEP  reduce 86
	DO  reduce 86
	DONE  reduce 86
	'|'  reduce 86
	'&'  reduce 86
	'='  reduce 86
	NE  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	GE  reduce 86
	LE  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	';'  reduce 86
	']'  reduce 86
	','  reduce 86
	'!'  reduce 86
	')'  reduce 86


state 142
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr '-' expr .  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 87
	THEN  reduce 87
	FI  reduce 87
	ELIF  reduce 87
	ELSE  reduce 87
	START  reduce 87
	UNTIL  reduce 87
	STEP  reduce 87
	DO  reduce 87
	DONE  reduce 87
	'|'  reduce 87
	'&'  reduce 87
	'='  reduce 87
	NE  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	GE  reduce 87
	LE  reduce 87
	'+'  reduce 87
	'-'  reduce 87
	';'  reduce 87
	']'  reduce 87
	','  reduce 87
	'!'  reduce 87
	')'  reduce 87


state 143
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr '*' expr .  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'^'  shift 110
	END  reduce 88
	THEN  reduce 88
	FI  reduce 88
	ELIF  reduce 88
	ELSE  reduce 88
	START  reduce 88
	UNTIL  reduce 88
	STEP  reduce 88
	DO  reduce 88
	DONE  reduce 88
	'|'  reduce 88
	'&'  reduce 88
	'='  reduce 88
	NE  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	GE  reduce 88
	LE  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88
	'%'  reduce 88
	';'  reduce 88
	']'  reduce 88
	','  reduce 88
	'!'  reduce 88
	')'  reduce 88


state 144
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr '/' expr .  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'^'  shift 110
	END  reduce 89
	THEN  reduce 89
	FI  reduce 89
	ELIF  reduce 89
	ELSE  reduce 89
	START  reduce 89
	UNTIL  reduce 89
	STEP  reduce 89
	DO  reduce 89
	DONE  reduce 89
	'|'  reduce 89
	'&'  reduce 89
	'='  reduce 89
	NE  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	GE  reduce 89
	LE  reduce 89
	'+'  reduce 89
	'-'  reduce 89
	'*'  reduce 89
	'/'  reduce 89
	'%'  reduce 89
	';'  reduce 89
	']'  reduce 89
	','  reduce 89
	'!'  reduce 89
	')'  reduce 89


state 145
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr '%' expr .  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'^'  shift 110
	END  reduce 90
	THEN  reduce 90
	FI  reduce 90
	ELIF  reduce 90
	ELSE  reduce 90
	START  reduce 90
	UNTIL  reduce 90
	STEP  reduce 90
	DO  reduce 90
	DONE  reduce 90
	'|'  reduce 90
	'&'  reduce 90
	'='  reduce 90
	NE  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	GE  reduce 90
	LE  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	'*'  reduce 90
	'/'  reduce 90
	'%'  reduce 90
	';'  reduce 90
	']'  reduce 90
	','  reduce 90
	'!'  reduce 90
	')'  reduce 90


state 146
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr '^' expr .  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'^'  shift 110
	END  reduce 91
	THEN  reduce 91
	FI  reduce 91
	ELIF  reduce 91
	ELSE  reduce 91
	START  reduce 91
	UNTIL  reduce 91
	STEP  reduce 91
	DO  reduce 91
	DONE  reduce 91
	'|'  reduce 91
	'&'  reduce 91
	'='  reduce 91
	NE  reduce 91
	'<'  reduce 91
	'>'  reduce 91
	GE  reduce 91
	LE  reduce 91
	'+'  reduce 91
	'-'  reduce 91
	'*'  reduce 91
	'/'  reduce 91
	'%'  reduce 91
	';'  reduce 91
	']'  reduce 91
	','  reduce 91
	'!'  reduce 91
	')'  reduce 91


state 147
	eqint : EQ '-' INT .  (37)

	.  reduce 37


state 148
	vdim : '[' INT ']' .  (23)

	.  reduce 23


state 149
	ints : INT .  (47)

	.  reduce 47


state 150
	ints : '-' . INT  (48)

	INT  shift 163
	.  error


state 151
	eqvec : EQ ints .  (46)
	ints : ints . ',' INT  (49)
	ints : ints . ',' '-' INT  (50)

	','  shift 164
	END  reduce 46
	START  reduce 46
	';'  reduce 46


state 152
	decl : FUNCTION qualif ftype ID $$2 fvars $$3 eqbody .  (11)

	.  reduce 11


state 153
	fvars : fvars ';' . fvar  (19)
	body : fvars ';' . instrs ret  (55)
	instrs : .  (64)

	STRING  shift 32
	NUMBER  shift 33
	ARRAY  shift 34
	INT  reduce 64
	CHAR  reduce 64
	ID  reduce 64
	STR  reduce 64
	END  reduce 64
	IF  reduce 64
	RETURN  reduce 64
	START  reduce 64
	FOR  reduce 64
	GOTO  reduce 64
	'&'  reduce 64
	'~'  reduce 64
	'-'  reduce 64
	';'  reduce 64
	'?'  reduce 64
	'('  reduce 64

	fvar  goto 78
	instrs  goto 165


state 154
	ret : RETURN .  (57)
	ret : RETURN . expr  (58)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	END  reduce 57
	FI  reduce 57
	ELIF  reduce 57
	ELSE  reduce 57
	START  reduce 57
	DONE  reduce 57
	';'  reduce 57

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 166


state 155
	body : instrs ret .  (56)

	.  reduce 56


state 156
	lval : ID '[' expr ']' .  (80)

	.  reduce 80


state 157
	exprs : exprs ',' . expr  (106)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 167


state 158
	expr : ID '(' exprs ')' .  (104)

	.  reduce 104


state 159
	block : instrs . loop  (63)
	instrs : instrs . instr  (65)
	instrs : instrs . lbl  (66)
	ret : .  (59)

	INT  shift 48
	CHAR  shift 49
	ID  shift 50
	STR  shift 51
	IF  shift 52
	RETURN  shift 154
	FOR  shift 53
	REPEAT  shift 168
	STOP  shift 169
	GOTO  shift 54
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	FI  reduce 59
	ELIF  reduce 59
	ELSE  reduce 59
	DONE  reduce 59

	lval  goto 60
	chars  goto 61
	char  goto 62
	ret  goto 170
	loop  goto 171
	instr  goto 63
	expr  goto 64
	lbl  goto 65


state 160
	instr : IF expr THEN block . elifs else FI  (68)
	elifs : .  (75)

	.  reduce 75

	elifs  goto 172


state 161
	instr : FOR expr UNTIL expr . STEP expr DO $$5 block DONE  (70)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	STEP  shift 173
	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	.  error


state 162
	instr : lval '#' expr ';' .  (73)

	.  reduce 73


state 163
	ints : '-' INT .  (48)

	.  reduce 48


state 164
	ints : ints ',' . INT  (49)
	ints : ints ',' . '-' INT  (50)

	INT  shift 174
	'-'  shift 175
	.  error


state 165
	body : fvars ';' instrs . ret  (55)
	instrs : instrs . instr  (65)
	instrs : instrs . lbl  (66)
	ret : .  (59)

	INT  shift 48
	CHAR  shift 49
	ID  shift 50
	STR  shift 51
	IF  shift 52
	RETURN  shift 154
	FOR  shift 53
	GOTO  shift 54
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	END  reduce 59
	START  reduce 59
	';'  reduce 59

	lval  goto 60
	chars  goto 61
	char  goto 62
	ret  goto 176
	instr  goto 63
	expr  goto 64
	lbl  goto 65


state 166
	ret : RETURN expr .  (58)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	END  reduce 58
	FI  reduce 58
	ELIF  reduce 58
	ELSE  reduce 58
	START  reduce 58
	DONE  reduce 58
	';'  reduce 58


state 167
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)
	exprs : exprs ',' expr .  (106)

	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	','  reduce 106
	')'  reduce 106


state 168
	loop : REPEAT .  (61)

	.  reduce 61


state 169
	loop : STOP .  (62)

	.  reduce 62


state 170
	loop : ret .  (60)

	.  reduce 60


state 171
	block : instrs loop .  (63)

	.  reduce 63


state 172
	instr : IF expr THEN block elifs . else FI  (68)
	elifs : elifs . ELIF expr THEN block  (76)
	else : .  (77)

	ELIF  shift 177
	ELSE  shift 178
	FI  reduce 77

	else  goto 179


state 173
	instr : FOR expr UNTIL expr STEP . expr DO $$5 block DONE  (70)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 180


state 174
	ints : ints ',' INT .  (49)

	.  reduce 49


state 175
	ints : ints ',' '-' . INT  (50)

	INT  shift 181
	.  error


state 176
	body : fvars ';' instrs ret .  (55)

	.  reduce 55


state 177
	elifs : elifs ELIF . expr THEN block  (76)

	INT  shift 48
	CHAR  shift 49
	ID  shift 83
	STR  shift 51
	'&'  shift 55
	'~'  shift 56
	'-'  shift 57
	'?'  shift 58
	'('  shift 59
	.  error

	lval  goto 84
	chars  goto 61
	char  goto 62
	expr  goto 182


state 178
	else : ELSE . block  (78)
	instrs : .  (64)

	.  reduce 64

	instrs  goto 159
	block  goto 183


state 179
	instr : IF expr THEN block elifs else . FI  (68)

	FI  shift 184
	.  error


state 180
	instr : FOR expr UNTIL expr STEP expr . DO $$5 block DONE  (70)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	DO  shift 185
	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	.  error


state 181
	ints : ints ',' '-' INT .  (50)

	.  reduce 50


state 182
	elifs : elifs ELIF expr . THEN block  (76)
	expr : expr . '+' expr  (86)
	expr : expr . '-' expr  (87)
	expr : expr . '*' expr  (88)
	expr : expr . '/' expr  (89)
	expr : expr . '%' expr  (90)
	expr : expr . '^' expr  (91)
	expr : expr . '=' expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . GE expr  (94)
	expr : expr . LE expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . '&' expr  (98)
	expr : expr . '|' expr  (99)
	expr : expr . TPAND expr  (100)

	THEN  shift 186
	TPAND  shift 96
	'|'  shift 97
	'&'  shift 98
	'='  shift 99
	NE  shift 100
	'<'  shift 101
	'>'  shift 102
	GE  shift 103
	LE  shift 104
	'+'  shift 105
	'-'  shift 106
	'*'  shift 107
	'/'  shift 108
	'%'  shift 109
	'^'  shift 110
	.  error


state 183
	else : ELSE block .  (78)

	.  reduce 78


state 184
	instr : IF expr THEN block elifs else FI .  (68)

	.  reduce 68


state 185
	instr : FOR expr UNTIL expr STEP expr DO . $$5 block DONE  (70)
	$$5 : .  (69)

	.  reduce 69

	$$5  goto 187


state 186
	elifs : elifs ELIF expr THEN . block  (76)
	instrs : .  (64)

	.  reduce 64

	instrs  goto 159
	block  goto 188


state 187
	instr : FOR expr UNTIL expr STEP expr DO $$5 . block DONE  (70)
	instrs : .  (64)

	.  reduce 64

	instrs  goto 159
	block  goto 189


state 188
	elifs : elifs ELIF expr THEN block .  (76)

	.  reduce 76


state 189
	instr : FOR expr UNTIL expr STEP expr DO $$5 block . DONE  (70)

	DONE  shift 190
	.  error


state 190
	instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE .  (70)

	.  reduce 70


69 terminals, 38 nonterminals
107 grammar rules, 191 states
